name: Build on Every 5th Commit

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  check-commit-count:
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.check.outputs.should_build }}
      commit_count: ${{ steps.check.outputs.commit_count }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # R√©cup√©rer tout l'historique

    - name: Check if we should build
      id: check
      run: |
        # Obtenir le hash du dernier commit qui a d√©clench√© un build
        # On utilise un tag ou un fichier marker pour tracker cela

        # Compter les commits depuis le dernier tag de build
        LAST_BUILD_TAG=$(git tag -l "build-*" | sort -V | tail -n1)

        if [ -z "$LAST_BUILD_TAG" ]; then
          # Pas de tag de build pr√©c√©dent, compter depuis le d√©but
          COMMIT_COUNT=$(git rev-list --count HEAD)
        else
          # Compter depuis le dernier tag de build
          COMMIT_COUNT=$(git rev-list --count ${LAST_BUILD_TAG}..HEAD)
        fi

        echo "commit_count=$COMMIT_COUNT" >> $GITHUB_OUTPUT
        echo "Commits since last build: $COMMIT_COUNT"

        # D√©cider si on doit builder (tous les 5 commits ou si c'est le premier)
        if [ $COMMIT_COUNT -ge 5 ] || [ -z "$LAST_BUILD_TAG" ]; then
          echo "should_build=true" >> $GITHUB_OUTPUT
          echo "üöÄ Should trigger build (commit count: $COMMIT_COUNT)"
        else
          echo "should_build=false" >> $GITHUB_OUTPUT
          echo "‚è≠Ô∏è Skipping build (commit count: $COMMIT_COUNT, need 5)"
        fi

  conditional-build:
    needs: check-commit-count
    if: needs.check-commit-count.outputs.should_build == 'true'
    uses: ./.github/workflows/build-and-test.yml

  create-build-tag:
    needs: [check-commit-count, conditional-build]
    runs-on: ubuntu-latest
    if: needs.check-commit-count.outputs.should_build == 'true' && needs.conditional-build.result == 'success'

    steps:
    - uses: actions/checkout@v4

    - name: Create build tag
      run: |
        # Cr√©er un tag pour marquer ce commit comme ayant d√©clench√© un build
        BUILD_TAG="build-$(date +%Y%m%d-%H%M%S)"
        git tag $BUILD_TAG

        # Note: Pour pusher le tag, vous devez configurer les permissions appropri√©es
        # ou utiliser un token avec les bonnes permissions
        echo "Created tag: $BUILD_TAG"
        echo "To push this tag, run: git push origin $BUILD_TAG"

        # Optionnel: push du tag (n√©cessite des permissions appropri√©es)
        # git push origin $BUILD_TAG
