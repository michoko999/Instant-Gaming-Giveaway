name: Alternative Build with Docker

on:
  workflow_dispatch:
    inputs:
      python_version:
        description: 'Version de Python à utiliser'
        required: true
        default: '3.11'
        type: choice
        options:
        - '3.9'
        - '3.10'
        - '3.11'
        - '3.12'

jobs:
  build-with-docker:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Build with Docker (alternative method)
      run: |
        cat > Dockerfile << 'EOF'
        FROM python:${{ github.event.inputs.python_version }}-slim

        # Installer les dépendances système
        RUN apt-get update && apt-get install -y \
            gcc \
            g++ \
            libc6-dev \
            libffi-dev \
            && rm -rf /var/lib/apt/lists/*

        WORKDIR /app
        COPY requirements.txt .
        COPY *.py .
        COPY *.ini .
        COPY *.json .
        COPY *.csv .
        COPY *.ico .
        COPY *.txt .

        # Installer les dépendances Python
        RUN pip install --no-cache-dir -r requirements.txt
        RUN pip install --no-cache-dir pyinstaller

        # Compiler l'exécutable
        RUN pyinstaller --onefile \
            --name="Giveaway_IG" \
            --add-data "config.ini:." \
            --add-data "traduction.json:." \
            --add-data "List-Uncheck.csv:." \
            giveaway_ig.py --noconfirm

        # Vérifier que l'exécutable a été créé
        RUN ls -la dist/
        RUN file dist/Giveaway_IG

        CMD ["./dist/Giveaway_IG"]
        EOF

        # Construire l'image Docker
        docker build -t giveaway-builder .

    - name: Extract executable from Docker
      run: |
        # Créer un conteneur et extraire l'exécutable
        docker create --name temp-container giveaway-builder
        docker cp temp-container:/app/dist/Giveaway_IG ./Giveaway_IG_Linux
        docker rm temp-container

        # Vérifier l'exécutable
        ls -la Giveaway_IG_Linux
        file Giveaway_IG_Linux

    - name: Upload Linux executable
      uses: actions/upload-artifact@v4
      with:
        name: giveaway-ig-linux-docker
        path: Giveaway_IG_Linux
        retention-days: 30

  build-windows-alternative:
    runs-on: windows-2019  # Essayer avec Windows 2019 au lieu de latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ github.event.inputs.python_version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build Windows executable (alternative method)
      run: |
        # Essayer sans file_version_info.txt d'abord
        pyinstaller --onefile --icon=Magic.ico --name="Giveaway_IG" --add-data "config.ini;." --add-data "traduction.json;." --add-data "List-Uncheck.csv;." giveaway_ig.py --noconfirm

    - name: Check Windows executable
      run: |
        if (Test-Path "dist/Giveaway_IG.exe") {
          Write-Output "✅ Windows executable created successfully"
          Get-Item "dist/Giveaway_IG.exe" | Select-Object Name, Length, LastWriteTime
        } else {
          Write-Output "❌ Windows executable not found"
          ls dist/
        }
      shell: powershell

    - name: Upload Windows executable
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: giveaway-ig-windows-alt
        path: dist/Giveaway_IG.exe
        retention-days: 30
