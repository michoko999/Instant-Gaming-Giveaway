name: Build and Test Executable

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  # Déclenchement manuel
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Verify required files exist
      run: |
        Write-Output "Checking required files..."
        $requiredFiles = @("config.ini", "traduction.json", "List-Uncheck.csv", "giveaway_ig.py", "Magic.ico", "file_version_info.txt")
        foreach ($file in $requiredFiles) {
          if (Test-Path $file) {
            Write-Output "✅ Found: $file"
          } else {
            Write-Output "❌ Missing: $file"
            exit 1
          }
        }
        Write-Output "All required files are present!"
      shell: powershell

    - name: Build Windows executable
      run: |
        echo "Starting PyInstaller build..."
        $ErrorActionPreference = "Stop"
        
        try {
          # Exécuter PyInstaller et capturer toute erreur
          pyinstaller --onefile --icon=Magic.ico --name="Giveaway_IG" --add-data "config.ini;." --add-data "traduction.json;." --add-data "List-Uncheck.csv;." --version-file=file_version_info.txt giveaway_ig.py
          
          echo "PyInstaller command completed. Checking results..."
          
          # Vérifier si le dossier dist existe
          if (Test-Path "dist") {
            echo "✅ dist directory created"
            Get-ChildItem "dist" -Force
            
            # Vérifier spécifiquement si l'exécutable existe
            if (Test-Path "dist\Giveaway_IG.exe") {
              $fileInfo = Get-Item "dist\Giveaway_IG.exe"
              echo "✅ Executable created successfully: $($fileInfo.Name) ($($fileInfo.Length) bytes)"
            } else {
              echo "❌ Executable not found in dist directory"
              echo "Contents of dist:"
              Get-ChildItem "dist" -Force
              exit 1
            }
          } else {
            echo "❌ dist directory not created - PyInstaller failed"
            exit 1
          }
        } catch {
          echo "❌ PyInstaller failed with error: $_"
          echo "Last 20 lines of any available logs:"
          if (Test-Path "build\Giveaway_IG\warn-Giveaway_IG.txt") {
            Get-Content "build\Giveaway_IG\warn-Giveaway_IG.txt" -Tail 20
          }
          exit 1
        }
      shell: powershell

    - name: Test executable exists
      run: |
        if (Test-Path "dist/Giveaway_IG.exe") {
          Write-Output "✅ Executable created successfully"
          Get-Item "dist/Giveaway_IG.exe" | Select-Object Name, Length, LastWriteTime
        } else {
          Write-Output "❌ Executable not found"
          exit 1
        }
      shell: powershell

    - name: Test executable runs (basic smoke test)
      shell: powershell
      run: |
        # L'exécutable existe déjà (vérifié dans l'étape précédente)
        echo "Running smoke test on Windows executable..."
        
        # Test que l'exécutable démarre sans erreur critique
        $job = Start-Job -ScriptBlock {
          & "dist\Giveaway_IG.exe" --help 2>&1
        }

        # Attendre maximum 10 secondes
        $timeout = 10
        $completed = $job | Wait-Job -Timeout $timeout

        if ($completed) {
          $output = Receive-Job $job
          echo "Executable output:"
          echo $output
          
          # Si l'exécutable a répondu, c'est bon signe
          echo "✅ Executable responded to --help"
        } else {
          echo "⚠️ Executable test timed out after $timeout seconds"
          echo "This might be normal if the executable is interactive"
          Stop-Job $job
        }

        Remove-Job $job
        echo "✅ Smoke test completed"
      shell: powershell

    - name: Upload executable artifact
      uses: actions/upload-artifact@v4
      with:
        name: giveaway-ig-windows-exe
        path: dist/Giveaway_IG.exe
        retention-days: 30

    - name: Upload build logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs-windows
        path: |
          build/
          *.spec
        retention-days: 7

  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Verify required files exist
      run: |
        echo "Checking required files..."
        for file in config.ini traduction.json List-Uncheck.csv giveaway_ig.py Magic.ico; do
          if [ -f "$file" ]; then
            echo "✅ Found: $file"
          else
            echo "❌ Missing: $file"
            exit 1
          fi
        done
        echo "All required files are present!"

    - name: Build Linux executable
      run: |
        pyinstaller --onefile --name="Giveaway_IG" --add-data "config.ini:." --add-data "traduction.json:." --add-data "List-Uncheck.csv:." giveaway_ig.py

    - name: Test executable exists and permissions
      run: |
        if [ -f "dist/Giveaway_IG" ]; then
          echo "✅ Executable created successfully"
          ls -la dist/Giveaway_IG
          chmod +x dist/Giveaway_IG
        else
          echo "❌ Executable not found"
          exit 1
        fi

    - name: Test executable runs (basic smoke test)
      run: |
        # Test que l'exécutable démarre sans erreur critique
        echo "Testing executable..."
        timeout 15s ./dist/Giveaway_IG > test_output.txt 2>&1 || true

        echo "Executable output:"
        cat test_output.txt

        # Vérifier que l'output contient des éléments attendus
        if grep -q "Instant Gaming Giveaway Tool\|v[0-9]\+\.[0-9]\+\.[0-9]\+" test_output.txt; then
          echo "✅ Executable appears to be working correctly"
        else
          echo "⚠️ Executable started but output seems unexpected"
        fi

        echo "✅ Smoke test completed"

    - name: Upload executable artifact
      uses: actions/upload-artifact@v4
      with:
        name: giveaway-ig-linux-binary
        path: dist/Giveaway_IG
        retention-days: 30

  # Job de synthèse
  build-summary:
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux]
    if: always()

    steps:
    - name: Build Summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        if [ "${{ needs.build-windows.result }}" == "success" ]; then
          echo "✅ Windows build: SUCCESS" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Windows build: FAILED" >> $GITHUB_STEP_SUMMARY
        fi

        if [ "${{ needs.build-linux.result }}" == "success" ]; then
          echo "✅ Linux build: SUCCESS" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Linux build: FAILED" >> $GITHUB_STEP_SUMMARY
        fi

        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Artifacts Generated:" >> $GITHUB_STEP_SUMMARY
        echo "- Windows: \`Giveaway_IG.exe\`" >> $GITHUB_STEP_SUMMARY
        echo "- Linux: \`Giveaway_IG\`" >> $GITHUB_STEP_SUMMARY
