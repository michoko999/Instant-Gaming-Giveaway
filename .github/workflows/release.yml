name: Create Release with Executables

on:
  push:
    tags:
      - 'v*'  # Déclenché sur les tags de version (ex: v1.3.0)
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (ex: 1.3.0)'
        required: true
        type: string
      prerelease:
        description: 'Is this a pre-release?'
        required: false
        type: boolean
        default: false

jobs:
  build-executables:
    strategy:
      matrix:
        include:
          - os: windows-latest
            executable_name: Giveaway_IG.exe
            build_command: |
              pyinstaller --onefile --icon=Magic.ico --name="Giveaway_IG" --add-data "config.ini;." --add-data "traduction.json;." --add-data "List-Uncheck.csv;." --version-file=file_version_info.txt giveaway_ig.py
          - os: ubuntu-latest
            executable_name: Giveaway_IG_Linux
            build_command: |
              pyinstaller --onefile --name="Giveaway_IG_Linux" --add-data "config.ini:." --add-data "traduction.json:." --add-data "List-Uncheck.csv:." giveaway_ig.py
          - os: macos-latest
            executable_name: Giveaway_IG_macOS
            build_command: |
              pyinstaller --onefile --name="Giveaway_IG_macOS" --add-data "config.ini:." --add-data "traduction.json:." --add-data "List-Uncheck.csv:." giveaway_ig.py

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      run: ${{ matrix.build_command }}

    - name: Rename executable (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        mv dist/Giveaway_IG_Linux dist/${{ matrix.executable_name }} 2>/dev/null || true
        mv dist/Giveaway_IG_macOS dist/${{ matrix.executable_name }} 2>/dev/null || true

    - name: Test executable
      shell: bash
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          # Test Windows
          timeout 10s dist/Giveaway_IG.exe || echo "Executable test completed (timeout expected)"
        else
          # Test Linux/macOS
          chmod +x dist/${{ matrix.executable_name }}
          timeout 10s dist/${{ matrix.executable_name }} || echo "Executable test completed (timeout expected)"
        fi

    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: executable-${{ matrix.os }}
        path: dist/${{ matrix.executable_name }}
        retention-days: 90

  create-release:
    needs: build-executables
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Download all executables
      uses: actions/download-artifact@v4
      with:
        path: executables/

    - name: Get version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"

    - name: Extract changelog for this version
      run: |
        # Extraire les changements pour cette version depuis le code Python
        VERSION_INFO=$(python3 -c "
        import re
        try:
            with open('giveaway_ig.py', 'r') as f:
                content = f.read()
                version_match = re.search(r'VERSION\s*=\s*[\"\\']([^\"\\']*)[\"\\'']', content)
                if version_match:
                    print(f'Version dans le code: {version_match.group(1)}')
                else:
                    print('Version: ${{ steps.version.outputs.version }}')
        except Exception as e:
            print(f'Version: ${{ steps.version.outputs.version }}')
        " 2>/dev/null)

        # Créer un changelog basique
        cat > RELEASE_NOTES.md << EOF
        # Instant Gaming Giveaway Tool v${{ steps.version.outputs.version }}

        ## 🎉 Nouvelle version disponible !

        ### 📦 Téléchargements
        - **Windows**: \`Giveaway_IG.exe\`
        - **Linux**: \`Giveaway_IG_Linux\`
        - **macOS**: \`Giveaway_IG_macOS\`

        ### 🔧 Améliorations
        - Code optimisé et nettoyé
        - Meilleure gestion des erreurs
        - Performance améliorée

        ### 💡 Utilisation
        1. Téléchargez l'exécutable pour votre système
        2. Lancez le programme
        3. Suivez les instructions à l'écran

        ### ⚠️ Notes importantes
        - Certains antivirus peuvent détecter l'exécutable comme suspect (faux positif)
        - Assurez-vous d'avoir une connexion internet stable
        - Le programme est compatible avec tous les systèmes modernes

        ---

        $VERSION_INFO
        EOF

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: "Instant Gaming Giveaway Tool v${{ steps.version.outputs.version }}"
        body_path: RELEASE_NOTES.md
        prerelease: ${{ github.event.inputs.prerelease || false }}
        files: |
          executables/executable-windows-latest/Giveaway_IG.exe
          executables/executable-ubuntu-latest/Giveaway_IG_Linux
          executables/executable-macos-latest/Giveaway_IG_macOS
        draft: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update Release Summary
      run: |
        echo "## 🚀 Release Created Successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Version**: v${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "**Tag**: \`v${{ steps.version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Executables inclus:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Windows (Giveaway_IG.exe)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Linux (Giveaway_IG_Linux)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ macOS (Giveaway_IG_macOS)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "La release est maintenant disponible sur GitHub!" >> $GITHUB_STEP_SUMMARY
